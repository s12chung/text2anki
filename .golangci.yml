run:
  # timeout for analysis, e.g. 30s, 5m, default is 1m
  timeout: 2m
linters:
  disable-all: true
  enable:
    # enabled by default
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - typecheck
    - unused
    # disabled by default
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - containedctx
    - contextcheck
    - cyclop
    # - deadcode [deprecated]
    - decorder
    # - depguard # not using whitelist of external packages
    - dogsled
    - dupl
    - dupword
    - durationcheck
    - errchkjson
    - errname
    - errorlint
    - execinquery
    - exhaustive
    # - exhaustivestruct [deprecated]
    # - exhaustruct # use constructors to handle empty fields instead of tags
    - exportloopref
    - forbidigo
    - forcetypeassert
    - funlen
    - gci
    # - ginkgolinter # not using ginkgo
    - gocheckcompilerdirectives
    # - gochecknoglobals # globals are ok
    # - gochecknoinits # init() is ok
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    # - godot # comments without periods are fine
    - godox
    # - goerr113 # want non-stick errors
    - gofmt
    # - gofumpt # too strict formatting
    # - goheader # not using a header
    - goimports
    # - golint [deprecated]
    # - gomnd # magic numbers are ok
    - gomoddirectives
    # - gomodguard # not using whitelist of external packages
    - goprintffuncname
    - gosec
    # - gosmopolitan # not using i18n, using it on front end
    - grouper
    # - ifshort [deprecated]
    - importas
    - interfacebloat
    # - interfacer [deprecated]
    # - ireturn # return interfaces are fine
    - lll
    # - loggercheck # not using these logs
    - maintidx
    - makezero
    # - maligned [deprecated]
    - mirror
    - misspell
    - musttag
    - nakedret
    - nestif
    - nilerr
    - nilnil
    # - nlreturn # don't need newline before return
    - noctx
    # - nolintlint # need this
    - nonamedreturns
    # - nosnakecase [deprecated]
    - nosprintfhostport
    # - paralleltest # not making every test parallel
    - prealloc
    - predeclared
    # - promlinter # not using prometheus
    - reassign
    - revive
    - rowserrcheck
    # - scopelint [deprecated]
    - sqlclosecheck
    # - structcheck [deprecated]
    - stylecheck
    - tagalign
    - tagliatelle
    - tenv
    # - testableexamples # no output comments are ok
    # - testpackage # _test packages are not preferred
    # - thelper # no need to clean up call stack for tests
    - tparallel
    - unconvert
    - unparam
    - usestdlibvars
    # - varcheck [deprecated]
    # - varnamelen # short names are fine
    - wastedassign
    - whitespace
    # - wrapcheck # don't want to always wrap errors
    # - wsl # too strict whitespace stuff
    # - zerologlint # not using zerolog

# all available settings of specific linters
linters-settings:
  lll:
    # Max line length, lines longer will be reported.
    # '\t' is counted as 1 character by default, and can be changed with the tab-width option.
    # Default: 120.
    line-length: 150
    # Tab width in spaces.
    # Default: 1
    tab-width: 1
  cyclop:
    # The maximal code complexity to report.
    # Default: 10
    max-complexity: 16
  errorlint:
    # Check for plain error comparisons.
    # Default: true
    comparison: false
  forbidigo:
    # Forbid the following identifiers (list of regexp).
    # Default: ["^(fmt\\.Print(|f|ln)|print|println)$"]
    forbid:
      - "^(fmt\\.Print(|f|ln)|print|println)$"
      - "^(slog\\.(Debug|Info|Warn|Error)(Context)?)$"
      - "^(slog\\.Default)$"
      - "^(logg\\.Default)$"
      - "^(context\\.Background)$"
  gci:
    # Section configuration to compare against.
    # Section names are case-insensitive and may contain parameters in ().
    # The default order of sections is `standard > default > custom > blank > dot`,
    # If `custom-order` is `true`, it follows the order of `sections` option.
    # Default: ["standard", "default"]
    sections:
      - standard # Standard section: captures all standard packages.
      - default # Default section: contains all imports that could not be matched to another section type.
      - prefix(github.com/s12chung/text2anki) # Custom section: groups all imports with the specified Prefix.
  tagliatelle:
    # Check the struct tag name case.
    case:
      # `camel` is used for `json` and `yaml`, and `header` is used for `header` (can be overridden)
      # Default: {}
      rules:
        # Any struct tag type can be used.
        # Support string case: `camel`, `pascal`, `kebab`, `snake`, `goCamel`, `goPascal`, `goKebab`, `goSnake`, `upper`, `lower`, `header`
        json: snake
issues:
  # golangci has its own rules to ignore certain lint rules. See `golangci-lint run --help`.
  # Default value for this option is true.
  exclude-use-default: false

  exclude-rules:
    # code for humans instead of machines until you scale up
    - text: fieldalignment
      linters:
        - govet
    # I like my zeros
    - text: "var-declaration: should drop = 0 from declaration of var"
      linters:
        - revive
    # easier to manipulate, even if longer
    - text: "if-return: redundant if ...; err != nil check, just return error instead"
      linters:
        - revive
    # it's fine in tests
    - text: "context.Background"
      path: '(.+)_test\.go'
      linters:
        - forbidigo
